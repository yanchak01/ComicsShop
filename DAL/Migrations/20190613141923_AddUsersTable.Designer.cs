// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ComDbContext))]
    [Migration("20190613141923_AddUsersTable")]
    partial class AddUsersTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.DBModels.Artist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComicsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("DAL.DBModels.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComicsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("DAL.DBModels.Comics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("NumbersOfPages");

                    b.Property<int>("Price");

                    b.Property<string>("Seria");

                    b.HasKey("Id");

                    b.ToTable("Comicses");
                });

            modelBuilder.Entity("DAL.DBModels.Corrector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComicsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("Correctors");
                });

            modelBuilder.Entity("DAL.DBModels.Illustrator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComicsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("Illustrators");
                });

            modelBuilder.Entity("DAL.DBModels.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ComicsId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ComicsId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DAL.UserModels.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("PassWord");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.DBModels.Artist", b =>
                {
                    b.HasOne("DAL.DBModels.Comics")
                        .WithMany("Artists")
                        .HasForeignKey("ComicsId");
                });

            modelBuilder.Entity("DAL.DBModels.Author", b =>
                {
                    b.HasOne("DAL.DBModels.Comics")
                        .WithMany("Authors")
                        .HasForeignKey("ComicsId");
                });

            modelBuilder.Entity("DAL.DBModels.Corrector", b =>
                {
                    b.HasOne("DAL.DBModels.Comics")
                        .WithMany("Correctors")
                        .HasForeignKey("ComicsId");
                });

            modelBuilder.Entity("DAL.DBModels.Illustrator", b =>
                {
                    b.HasOne("DAL.DBModels.Comics")
                        .WithMany("Illustrators")
                        .HasForeignKey("ComicsId");
                });

            modelBuilder.Entity("DAL.DBModels.Tag", b =>
                {
                    b.HasOne("DAL.DBModels.Comics")
                        .WithMany("Tags")
                        .HasForeignKey("ComicsId");
                });
#pragma warning restore 612, 618
        }
    }
}
